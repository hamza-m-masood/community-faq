# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative "./classes"

NUM_WORKER_NODE = 2

IP_NW = "192.168.56."
MASTER_IP_START = 11
NODE_IP_START = 20

VIRTUAL_MACHINES = {
  private_network: "192.168.56.",
  ip_start: 11,
  build_mode: "NAT",
  nodes: [
    {
      name: "controller",
      cpu: 4,
      memory: 2048,
      box: Hypervisor.centos,
    },
    {
      name: "target1",
      cpu: 2,
      memory: 2048,
      box: Hypervisor.ubuntu,
    },
  ],
}

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box_check_update = false

  VIRTUAL_MACHINES[:nodes].each_with_index do |vm, index|
    config.vm.define vm[:name] do |node|
      node.vm.box = vm[:box][:name]
      Hypervisor.get node: node, distro: vm[:box][:distro] do |h|
        h.set_spec cpu: vm[:cpu], memory: vm[:memory]
        h.private_network ip: VIRTUAL_MACHINES[:private_network] + "#{VIRTUAL_MACHINES[:ip_start] + index}"
        h.port_forward guest: 22, host: "#{2710 + index}"
        h.set_hostname hostname: vm[:name]
        h.provision_script VIRTUAL_MACHINES[:private_network], VIRTUAL_MACHINES[:build_mode], script: "setup_ip.sh"
      end
    end
  end

  # Provision Master Nodes

  # (1..NUM_WORKER_NODE).each do |i|
  #   config.vm.define "target#{i}" do |node|
  #     Hypervisor.get node do |h|
  #       h.set_spec cpu: 2, memory: 2048
  #       h.private_network ip: IP_NW + "#{NODE_IP_START + i}"
  #       h.port_forward guest: 22, host: "#{2720 + i}"
  #       h.set_hostname(hostname: "target#{i}")
  #     end
  #   end
  # end

  config_shown = false
  config.trigger.before :up do |trigger|
    trigger.info = "Pre-start trigger"
    trigger.ruby do |env, machine|
      if !config_shown
        show_system_info(trigger)
        config_shown = true
      end
    end
  end

  vm_count = 0
  config.trigger.after :up do |trigger|
    trigger.info = "Post-provision"
    trigger.ruby do |env, machine|
      vm_count += 1
      if vm_count == env.machine_names.length()
        puts "--> Post provision"
      end
    end
  end
end

def b_puts(str, width = 71)
  padding = width - 4 - str.length
  if padding < 1
    padding = 1
  end
  pad = " " * padding
  puts "# #{str}#{pad} #"
end

def show_system_info(trigger)
  begin
    puts "#######################################################################"
    b_puts("")
    b_puts("If raising a question on our forums, please PASTE (not screenshot)")
    b_puts("the content of this box with your question")
    b_puts("")
    b_puts("Detecting your hardware...")
    host = Host.get()
    b_puts "- System: #{host.os_name()}"
    b_puts("- CPU:    #{host.cpu_name()} (#{host.cpu_count()} cores)")
    b_puts("- RAM:    #{host.physical_ram_gb()} GB")
    if !host.hypervisor_exists?
      raise DetectionError.new "FATAL - Missing #{host.hypervisor_name()}. Please install it first."
    end
  rescue DetectionError => e
    b_puts("#{e}")
    trigger.abort = true
    raise
  ensure
    b_puts("")
    puts "#######################################################################\n\n"
  end
end
